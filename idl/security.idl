/*
 *  The XML:DB Initiative Software License, Version 1.0
 *
 *
 * Copyright (c) 2000-2003 The XML:DB Initiative.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       "This product includes software developed by the
 *        XML:DB Initiative (http://www.xmldb.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The name "XML:DB Initiative" must not be used to endorse or
 *    promote products derived from this software without prior written
 *    permission. For written permission, please contact info@xmldb.org.
 *
 * 5. Products derived from this software may not be called "XML:DB",
 *    nor may "XML:DB" appear in their name, without prior written
 *    permission of the XML:DB Initiative.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the XML:DB Initiative. For more information
 * on the XML:DB Initiative, please see <http://www.xmldb.org/>.
 */
 
module org { module xmldb { module api { module security {

    interface User;
    interface Group;
    interface Permission;

    typedef sequence<User> UserList;
    typedef sequence<Group> GroupList;
    typedef sequence<Permission> PermissionList;

    interface Group {
        string getName();

        long getId();

        long compareTo(in Object other);
    };

    interface User {
        /**
         *  Add the user to a group
         *
         *@param  group  The feature to be added to the Group attribute
         */
        void addGroup( in string group );

        /**
         *  Get all groups this user belongs to
         *
         *@return An array of groups
         */
        GroupList getGroups();

        /**
         *  Get the user name
         *
         *@return  The user name value
         */
        string getName();


        /**
         *  Get the user's password
         *
         *@return  Thes user's password in unencrypted string format
         */
        string getPassword();

        /**
         *  Get the primary group this user belongs to
         *
         *@return    The primaryGroup value
         */
        string getPrimaryGroup();

        /**
         *  Is the user a member of group?
         *
         *@param  group  Description of the Parameter
         *@return        Description of the Return Value
         */
        boolean hasGroup( in string group );

        /**
         *  Sets the password attribute of the User object
         *
         *@param  passwd  The new password value
         */
        void setPassword( in string passwd );

        /**
         *  Sets the passwordDigest attribute of the User object
         *
         *@param  passwd  The new passwordDigest value
         */
        void setPasswordDigest( in string passwd );

        // not sure if this should be enforced
        //string digest(in string passwd);

        boolean validate( in string passwd );

        void setHome(in string homeCollection);

        string getHome();
    };


    interface Permission {
        const long DEFAULT_PERM = 0755;
        const long READ = 4;
        const long UPDATE = 1;
        const long WRITE = 2;

        long getGroupPermissions();
        string getOwner();
        string getOwnerGroup();
        long getPermissions();
        long getPublicPermissions();
        long getUserPermissions();
        void setGroup( in string group );
        void setGroupPermissions( in long permissions );
        void setOwner( in User user );
        // cannot override in idl
        //void setOwner( in string user );
        // cannot override in idl
        //void setPermissions( in string permissions ) raises (base::XMLDBException);
        void setPermissions( in long permissions );
        void setPublicPermissions( in long permissions );
        void setUserPermissions( in long permissions );
        boolean validate( in User user, in long permissions );
        //void read( in DataInput istream ) raises (base::XMLDBException);
        //void write( in DataOutput ostream ) raises (base::XMLDBException);
        //void store( in string prefix, in Properties props );
    };

}; }; }; };
